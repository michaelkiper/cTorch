

a = tensor([[1., 2., 3., 4.],
            [1., 2., 3., 4.],
            [1., 2., 3., 4.]], requires_grad=True)

b = tensor([[ 2., 4.,  6.],
            [0.5, 1., 1.5]], requires_grad=True)


c = (b @ a) 
c = torch.matmul(b, a)
tensor([[12., 24., 36., 48.],
        [ 3.,  6.,  9., 12.]], grad_fn=<MmBackward0>)

c.backward(tensor([[1., 1., 1., 1.], [1., 1., 1., 1.]]))

c.grad
None

b.grad
tensor([[10., 10., 10.],
        [10., 10., 10.]])
tensor([[∂c1/∂b1_1,  ∂c2/∂b1_2,  ∂c3/∂b3, ∂c4/∂b4],
        [∂c2/∂b1,  ∂c2/∂b2,  ∂c3/∂b3, ∂c4/∂b4]])

a.grad
tensor([[2.5000, 2.5000, 2.5000, 2.5000],
        [5.0000, 5.0000, 5.0000, 5.0000],
        [7.5000, 7.5000, 7.5000, 7.5000]])
tensor([[∂c1/∂a1_1,  ∂c1/∂a1_2,  ∂c1/∂a1_3, ∂c1/∂a1_4],
        [∂c2/∂a2_1,  ∂c2/∂a2_2,  ∂c2/∂a2_3, ∂c2/∂a2_4]
        [∂c3/∂a3_1,  ∂c3/∂a3_2,  ∂c3/∂a3_3, ∂c3/∂a3_4]
        ])
